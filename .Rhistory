volcano_plot01 + theme(legend.title=element_blank())
volcano_plot01 + scale_colour_discrete(name="",labels=c(expression(d <= 0.8),expression(d > 0.8)))
?scale_color_discrete
volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.text=element_text(size=20))
volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legent.title=element_text(size=15),legend.text=element_text(size=12))
volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=12))
volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
png(filename=paste0(tissue_fn,"_GSE2_volcano_plot01.png"),width=650,height=550,pointsize=17)
#   volcano_plot01 + theme(legend.title=element_blank())
volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
dev.off()
volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8)))
+ theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
+ guides(colour = guide_legend(override.aes = list(size=10)))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=10)))
volcano_plot01
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
# save plot
png(filename=paste0(tissue_fn,"_GSE2_volcano_plot01.png"),width=700,height=550,pointsize=17)
#   volcano_plot01 + theme(legend.title=element_blank())
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
dev.off()
volcano_plot01 + theme(plot.margin=unit(c(0.2,0.2,0.2,0.1),"cm")
)
volcano_plot01 + theme(plot.margin=unit(c(0.2,0.2,0.2,0.1),"cm"))
png(filename=paste0(tissue_fn,"_GSE2_volcano_plot01.png"),width=650,height=550,pointsize=17)
#   volcano_plot01 + theme(legend.title=element_blank())
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
dev.off()
ggsave(volcano_plot01,file=paste0(tissue_fn,"_GSE2_volcano_plot01.png"))
png(filename=paste0(tissue_fn,"_GSE2_volcano_plot01.png"),width=650,height=550,pointsize=17)
#   volcano_plot01 + theme(legend.title=element_blank())
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=15),legend.text=element_text(size=14))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
dev.off()
ggsave(volcano_plot01,file=paste0(tissue_fn,"_GSE2_volcano_plot01.png"))
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=15))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
ggsave(volcano_plot01,file=paste0(tissue_fn,"_GSE2_volcano_plot01.png"))
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
# save plot
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
ggsave(volcano_plot01,file=paste0(tissue_fn,"_GSE2_volcano_plot01.png"))
pcout01 <- prcomp(t(dat),scale=T)
pcout01 <- prcomp(t(dat),scale=T)
scores01 <- data.frame(GSE=colnames(dat),pcout01$x[,1:3])
pc1.2 <- qplot(x=PC1, y=PC2, data=scores01, colour=GSE)
pc1.2 + theme(legend.position="none")
ggsave(pc1.2_01 + theme(legend.position="none"),file=paste0(tissue_fn,"_GSE2_pc1pc2_nolab_plot01.png"))
scores01 <- data.frame(GSE=colnames(dat),pcout01$x[,1:3])
pc1.2_01 <- qplot(x=PC1, y=PC2, data=scores01, colour=GSE)
ggsave(pc1.2_01 + theme(legend.position="none"),file=paste0(tissue_fn,"_GSE2_pc1pc2_nolab_plot01.png"))
ggsave(pc1.2_01,file=paste0(tissue_fn,"_GSE2_pc1pc2_plot01.png"))
?qplot
pc1.2_01 <- qplot(x=PC1, y=PC2, data=scores01, colour=GSE,main=tissue_fn)
pc1.2_01
pc1.2_01 <- qplot(x=PC1, y=PC2, data=scores01, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc1.2_01
pc1.2_01 <- qplot(x=PC1, y=PC2, data=scores01, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc1.2_01 <- pc1.2_01 + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
pc1.2_01
pc1.2_01 <- qplot(x=PC1, y=PC2, data=scores01, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc1.2_01 <- pc1.2_01 + theme(legend.title=element_text(size=17),legend.text=element_text(size=17)) + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85))
pc1.2_01
pc1.2_01 <- qplot(x=PC1, y=PC2, data=scores01, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc1.2_01 <- pc1.2_01 + theme(legend.title=element_text(size=17),legend.text=element_text(size=17)) + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
pc1.2_01
ggsave(pc1.2_01 + theme(legend.position="none"),file=paste0(tissue_fn,"_GSE2_pc1pc2_nolab_plot01.png"))
ggsave(pc1.2_01,file=paste0(tissue_fn,"_GSE2_pc1pc2_plot01.png"))
pc1.3_01 <- qplot(x=PC1, y=PC3, data=scores01, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc1.3_01 <- pc1.3_01 + theme(legend.title=element_text(size=17),legend.text=element_text(size=17)) + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
pc1.2_01 + theme(legend.position="none")
pc1.3_01 <- qplot(x=PC1, y=PC3, data=scores01, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc1.3_01 <- pc1.3_01 + theme(legend.title=element_text(size=17),legend.text=element_text(size=17)) + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
pc1.3_01 + theme(legend.position="none")
pc1.3_01
pc2.3_01 <- qplot(x=PC2, y=PC3, data=scores01, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc2.3_01 <- pc2.3_01 + theme(legend.title=element_text(size=17),legend.text=element_text(size=17)) + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
pc2.3_01 + theme(legend.position="none")
pc2.3_01
ES02 <- effectsize(fit2_combat$t,dim(dat)[2],(fit2_combat$df.prior+fit2_combat$df.residual))
head(ES02)
tT_combat <- merge(tT_combat,ES02,by=0)
head(tT_combat)
ES02 <- effectsize(fit2_combat$t,dim(dat)[2],(fit2_combat$df.prior+fit2_combat$df.residual))
tT_combat <- merge(tT_combat,ES02,by=0)
tT_combat <- topTable(fit2_combat, adjust="fdr", sort.by="B", number=dim(dat)[1])
# replace original platform annotation
tT_combat <- merge(tT_combat, ncbifd, by=0)
rownames(tT_combat) <- tT_combat$Row.names
tT_combat <- subset(tT_combat,select=-c(Row.names,ID))
tT_combat <- tT_combat[order(tT_combat$adj.P.Val), ]  # restore correct order
# ==== Effect Size ====
# calculate effect size
ES02 <- effectsize(fit2_combat$t,dim(dat)[2],(fit2_combat$df.prior+fit2_combat$df.residual))
tT_combat <- merge(tT_combat,ES02,by=0)
head(tT_combat)
threshold02 <- as.factor(tT_combat$dprime > 0.8)
volcano_plot02 <- ggplot(data=tT_combat, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold02)) + geom_point(alpha=0.4, size=1.75)
volcano_plot02 <- volcano_plot02 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot02 <- volcano_plot02 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot02 <- volcano_plot02 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot02
pcout02 <- prcomp(t(tissue_combat),scale=T)
scores02 <- data.frame(GSE=colnames(dat),pcout02$x[,1:3])
pc1.2_02 <- qplot(x=PC1, y=PC2, data=scores02, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc1.2_02 <- pc1.2_02 + theme(legend.title=element_text(size=17),legend.text=element_text(size=17)) + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
pc1.2_02
pc1.3_02 <- qplot(x=PC1, y=PC3, data=scores02, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc1.3_02 <- pc1.3_02 + theme(legend.title=element_text(size=17),legend.text=element_text(size=17)) + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
pc1.3_02
pc2.3_02 <- qplot(x=PC2, y=PC3, data=scores02, colour=GSE,main=tissue_fn)+ theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
pc2.3_02
server=F
# Barcode annotation
# ==== Barcode Annotation ====
if(server){
tissue_annot <- readRDS("/net/irizarryfs01/srv/export/irizarryfs01_backed_up/share_root/ypitajuarez/Barcode/HGU133Plus2/Barcode3.tissue.RDS")
}else{
tissue_annot <- readRDS("Irizarry/Barcode//Annotation//Barcode3.tissue.RDS")
}
# GSE series per tissue
tmp <- subset(tissue_annot,select=c(tissue,series))
gse_lst <- lapply(split(tmp, tmp$tissue),function(x){table(x$series)})
# order by tissues by total number of samples
gse_lst <- gse_lst[order(sapply(gse_lst,sum),decreasing=T)]
# order GSE series within tissue by number of samples
gse_lst <- lapply(gse_lst,function(x){x[order(x,decreasing=T)]})
# filter GSE series with at least 5 samples
res <- lapply(gse_lst,function(x){x[x >= 5]})
# select tissues with at least two GSE series
res <- res[sapply(res,length) >= 2]
# select top GSE series y sample size
res <- lapply(res,function(x){x[1:2]})
# ==== Gene Expression Data ====
# get tissue names
tissue_names <- names(res)
length(tissue_names)
?list.files
make.names
getwd()
# ==== R Packages ====
library(Biobase)
library(GEOquery)
library(limma)
library(ggplot2)
library(metaMA)
library(sva)
# Barcode annotation
# ==== Barcode Annotation ====
tissue_annot <- readRDS("Irizarry/Barcode//Annotation//Barcode3.tissue.RDS")
# GSE series per tissue
tmp <- subset(tissue_annot,select=c(tissue,series))
gse_lst <- lapply(split(tmp, tmp$tissue),function(x){table(x$series)})
# order by tissues by total number of samples
gse_lst <- gse_lst[order(sapply(gse_lst,sum),decreasing=T)]
# order GSE series within tissue by number of samples
gse_lst <- lapply(gse_lst,function(x){x[order(x,decreasing=T)]})
# filter GSE series with at least 5 samples
res <- lapply(gse_lst,function(x){x[x >= 5]})
# select tissues with at least two GSE series
res <- res[sapply(res,length) >= 2]
# select top GSE series y sample size
res <- lapply(res,function(x){x[1:2]})
# ==== Gene Expression Data ====
# get tissue names
tissue_names <- names(res)
args = 1
tissue <- names(res)[args]
cat("Tissue:",tissue,"\n")
tissue_fn <- gsub("[#,%:]",".",tissue)
"Irizarry/Project I/output/blood.tT01.RDS"
tT <- readRDS(paste0("Irizarry/Project I/output/",tissue_fn,"_GSE2_limma.RDS"))
threshold01 <- as.factor(abs(tT$dprime) > 0.8)
threshold01 <- as.factor(abs(tT$dprime) > 0.8)
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(|d| <= 0.8),expression(|d| > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression('|'d'|' <= 0.8),expression('|'d'|' > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(paste0('|d| <= 0.8'),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(paste0('|d| <= 0.8')),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(|d| <= 0.8)),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression([d] <= 0.8)),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(group("|",d,"|") <= 0.8)),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(abs(d) <= 0.8)),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(abs(d) <= 0.8)),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8)),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.4, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot01
ggsave(volcano_plot01,file=paste0("Irizarry/Reports/Report21/",tissue_fn,"_GSE2_volcano_plot01.png"))
?ggsave
ggsave(volcano_plot01,file=paste0("Irizarry/Reports/Report21/",tissue_fn,"_GSE2_volcano_plot01.png"),
width=8,height=6.25)
ggsave(volcano_plot01,file=paste0("Irizarry/Reports/Report21/",tissue_fn,"_GSE2_volcano_plot01.png"),
width=8.5,height=6.5)
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.65, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
# save plot
ggsave(volcano_plot01,file=paste0("Irizarry/Reports/Report21/",tissue_fn,"_GSE2_volcano_plot01.png"),
width=8.5,height=6.5)
tT_combat <- readRDS(paste0("Irizarry/Project I/output/",tissue_fn,"_GSE2_limma_combat.RDS"))
volcano_plot02 <- ggplot(data=tT_combat, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold02)) + geom_point(alpha=0.65, size=1.75)
volcano_plot02 <- volcano_plot02 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot02 <- volcano_plot02 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot02 <- volcano_plot02 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot02
threshold02 <- as.factor(abs(tT_combat$dprime) > 0.8)
volcano_plot02 <- ggplot(data=tT_combat, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold02)) + geom_point(alpha=0.65, size=1.75)
volcano_plot02 <- volcano_plot02 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot02 <- volcano_plot02 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot02 <- volcano_plot02 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
volcano_plot02
tT_combat <- readRDS(paste0("Irizarry/Project I/output/",tissue_fn,"_GSE2_limma_combat.RDS"))
# ==== Volcano Plots ====
# effect size threshold
threshold02 <- as.factor(abs(tT_combat$dprime) > 0.8)
volcano_plot02 <- ggplot(data=tT_combat, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold02)) + geom_point(alpha=0.65, size=1.75)
volcano_plot02 <- volcano_plot02 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot02 <- volcano_plot02 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot02 <- volcano_plot02 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
# save plot
ggsave(volcano_plot02,file=paste0("Irizarry/Reports/Report21/",tissue_fn,"_GSE2_volcano_plot02.png"),
width=8.5,height=6.5)
# Barcode annotation
# ==== Barcode Annotation ====
tissue_annot <- readRDS("Irizarry/Barcode//Annotation//Barcode3.tissue.RDS")
# GSE series per tissue
tmp <- subset(tissue_annot,select=c(tissue,series))
gse_lst <- lapply(split(tmp, tmp$tissue),function(x){table(x$series)})
# order by tissues by total number of samples
gse_lst <- gse_lst[order(sapply(gse_lst,sum),decreasing=T)]
# order GSE series within tissue by number of samples
gse_lst <- lapply(gse_lst,function(x){x[order(x,decreasing=T)]})
# filter GSE series with at least 5 samples
res <- lapply(gse_lst,function(x){x[x >= 5]})
# select tissues with at least two GSE series
res <- res[sapply(res,length) >= 2]
# select top GSE series y sample size
res <- lapply(res,function(x){x[1:2]})
# ==== Gene Expression Data ====
# get tissue names
tissue_names <- names(res)
for(tissue in tissue_names){
tissue_fn <- gsub("[#,%:]",".",tissue)
# ==== ANOVA (unadjusted) ====
tT <- readRDS(paste0("Irizarry/Project I/output/",tissue_fn,"_GSE2_limma.RDS"))
# ==== Volcano Plots ====
# effect size threshold
threshold01 <- as.factor(abs(tT$dprime) > 0.8)
volcano_plot01 <- ggplot(data=tT, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold01)) + geom_point(alpha=0.65, size=1.75)
volcano_plot01 <- volcano_plot01 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot01 <- volcano_plot01 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot01 <- volcano_plot01 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
# save plot
ggsave(volcano_plot01,file=paste0("Irizarry/Reports/Report21/",tissue_fn,"_GSE2_volcano_plot01.png"),
width=8.5,height=6.5)
# ==== ANOVA (adjusted) ====
tT_combat <- readRDS(paste0("Irizarry/Project I/output/",tissue_fn,"_GSE2_limma_combat.RDS"))
# ==== Volcano Plots ====
# effect size threshold
threshold02 <- as.factor(abs(tT_combat$dprime) > 0.8)
volcano_plot02 <- ggplot(data=tT_combat, aes(x=logFC, y=-log10(adj.P.Val), colour=threshold02)) + geom_point(alpha=0.65, size=1.75)
volcano_plot02 <- volcano_plot02 + labs(x="log2 FC",y="-log10 p-value",title=tissue) + theme(plot.title = element_text(size=25, face="bold")) + theme(axis.title=element_text(size=20))
volcano_plot02 <- volcano_plot02 + scale_colour_discrete(name="Effect Size",labels=c(expression(d <= 0.8),expression(d > 0.8))) + theme(legend.title=element_text(size=17),legend.text=element_text(size=17))
volcano_plot02 <- volcano_plot02 + guides(colour = guide_legend(override.aes = list(size=5,alpha=0.85)))
# save plot
ggsave(volcano_plot02,file=paste0("Irizarry/Reports/Report21/",tissue_fn,"_GSE2_volcano_plot02.png"),
width=8.5,height=6.5)
}
length(tissue_names)
tissue_names[32]
222/37
example(boxplot)
example(mean)
mean
mad
sd
boxplot
cor
class(6)
?numeric
?"numeric-class"
?lm
?"lm-class"
?lm
showMethods("lm")
showMethods("summary")
getMethod("summary","lm")
vignette("ggplot2")
library(ggplot2)
library(ggplot2)
library("ggplot2", lib.loc="C:/Program Files/R/R-3.1.2/library")
install.packages("Rcpp")
library(ggplot2)
install.packages("ggplot2", repos=c("http://rstudio.org/_packages", "http://cran.rstudio.com"))
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
library(car)
install.packages("car")
library(car)
library(microbenchmark)
data(Duncan)
library(car)
data(duncan)
?Duncan
data(Duncan)
mod.duncan <- lm(prestige ~ income + education,data=Duncan)
qq.plot(mod.duncan, simulate=T, labels=row.names(Duncan))
qqPlot(mod.duncan, simulate=T, labels=row.names(Duncan))
outlier.test(mod.duncan, labels=row.names(Duncan))
outlierTest(mod.duncan, labels=row.names(Duncan))
leveragePlots(mod.duncan)
outlierTest(mod.duncan, labels=row.names(Duncan))
leveragePlots(mod.duncan)
qqPlot(mod.duncan, simulate=T, labels=row.names(Duncan))
fit=mod.duncan
outlierTest(fit) # Bonferonni p-value for most extreme obs
qqPlot(fit, main="QQ Plot") #qq plot for studentized resid
leveragePlots(fit) # leverage plots
av.plots(fit)
avPlots(fit)
nrow(Duncan)
cutoff <- 4/((nrow(Duncan)-length(fit$coefficients)-2))
plot(fit, which=4, cook.levels=cutoff)
influencePlot(fit, id.method="identify", main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
qqPlot(fit, main="QQ Plot")
library(MASS)
sresid <- studres(fit)
hist(sresid, freq=FALSE,
main="Distribution of Studentized Residuals")
hist(sresid, freq=FALSE,
main="Distribution of Studentized Residuals")
xfit<-seq(min(sresid),max(sresid),length=40)
yfit<-dnorm(xfit)
lines(xfit, yfit)
?stdres
?studres
ncvTest(fit)
spreadLevelPlot(fit)
vif(fit) # variance inflation factors
sqrt(vif(fit)) > 2 # problem?
crPlots(fit)
ceresPlots(fit)
durbinWatsonTest(fit)
?durbinWatsonTest
library(car)
?Duncan
?car
?Duncan
data(Duncan)
summary(Duncan$prestige)
hist(Duncan$prestige)
?qqPlot
qqPlot(fit, main="QQ Plot")
fit
fit$residuals
names(fit$residuals)
names(fit$residuals) == 'minister'
outlierTest(fit)
which(names(fit$residuals) == 'minister')
?qqPlot
qqPlot(fit, main="QQ Plot",distribution="t")
qqPlot(fit, main="QQ Plot",id.method="y")
qqPlot(fit, main="QQ Plot",id.method="y",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",id.method="y",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",id.method="y",distribution="t",labels=row.names(Duncan))
row.names(Duncan)
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan),simulate=F)
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan),simulate=F)
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
set.seed(1)
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
set.seed(7)
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
set.seed(11)
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
set.seed(13)
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
id=qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
id
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
tmp=qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
tmp
qqPlot(fit, main="QQ Plot",distribution="t",labels=row.names(Duncan))
qqPlot(fit, main="QQ Plot")
qqPlot(fit, main="QQ Plot",labels=rownames(Duncan))
?identify
qqPlot(fit, main="QQ Plot")
outlierTest(fit)
plot(hatvalues(fit))
abline(h=c(2, 3)*3/45, lty=2) # reference lines
identify(l:45, hatvalues(fit), row.names(Duncan))
identify(1:45, hatvalues(fit), row.names(Duncan))
plot(cookd(fit))
plot(cooks.distance(fit))
cutoff <- 4/((nrow(Duncan)-length(fit$coefficients)-2))
plot(cooks.distance(fit))
abline(h=cutoff)
identify(1:45, cookd(mod.duncan), row.names(Duncan))
leveragePlots(fit)
?leveragePlot
avPlots(fit)
avPlots(fit)
spreadLevelPlot(fit)
ncvTest(fit)
library(MASS)
sresid <- studres(fit)
hist(sresid, freq=FALSE,
main="Distribution of Studentized Residuals")
xfit<-seq(min(sresid),max(sresid),length=40)
yfit<-dnorm(xfit)
lines(xfit, yfit)
fit$residuals
hist(fit$residuals, freq=FALSE,
main="Distribution of Studentized Residuals")
xfit<-seq(min(fit$residuals),max(fit$residuals),length=40)
yfit<-dnorm(xfit)
lines(xfit, yfit)
?car
?rrstudent
?rstudent
sresid <- rstudent(fit)
hist(sresid, freq=FALSE,
main="Distribution of Studentized Residuals")
xfit<-seq(min(sresid),max(sresid),length=40)
yfit<-dnorm(xfit)
lines(xfit, yfit)
?ncvTest
?spreadLevelPlot
ncvTest(fit)
library(metaMA)
install.packages("metaMA")
install.packages("roxygen2")
install.packages("devtools")
library(roxygen2)
library(devtools)
getwd()
setwd("R tutorials/")
create("cats")
setwd("./cats")
document()
setwd("..")
getwd()
install("cats")
?cat_function
getwd()
create("myFirstPackage")
happy_function <- function(happy=TRUE){
if(happy){
print(":)")
}else{
cat(">:(")
}
}
happy_function
happy_function()
happy_function(FALSE)
setwd("./myFirstPackage/")
document()
setwd("..")
getwd()
install("myFirstPackage")
?happy_function
